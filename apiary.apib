HOST: http://gtsc.leanapp.cn/

# 光速达开放平台API
光速达智能云开放平台API

## 概述
本文档用于说明私有云调用光速达智能云接口方法，主要分三部分进行相关内容定义和介绍。
- 第一部分概述，主要介绍本文档结构和主要内容。
- 第二部分主要介绍光速达智能云HTTP连接请求和安全策略，对HTTP请求格式、应答格式、签名算法等做了详细介绍，并列举实例进行相关说明。
- 第三部分主要介绍光速达智能云平台开放接口规范细则，从接口功能、定义和范例三方面对接口做了详细规定并给出使用范例。最后对有关专业用语做了名词解释，便于理解文档内容。

## 接口版本
| 版本    | 更新内容| 发布人 |  发布时间 |
|--------|-------|----|-------|
| V0.1 | 初稿待确认|  光速达 | 2016-05-10  |

## 开发者规范
开发者进行开发时，除了需要满足每个接口的规范限制、调用频率限制外，还需特别注意设备控制消息、用户数据等敏感信息的使用规范。

涉及用户数据时：

- 您的服务需要收集用户任何数据的，必须事先获得用户的明确同意，且仅应当收集为运营及功能实现目的而必要的用户数据， 同时应当告知用户相关数据收集的目的、范围及使用方式等，保障用户知情权。
- 您收集用户的数据后，必须采取必要的保护措施，防止用户数据被盗、泄漏等。
- 您在特收集的用户数据仅可以在该特定应用中使用，不得将其使用在该特定应用之外或为其他任何目的进行使用，也不得以任何方式将其提供给他人。
- 如果光速达认为您收集、使用用户数据的方式，可能损害用户体验，光速达有权要求您删除相关数据并不得再以该方式收集、使用用户数据。
- 一旦您停止使用本服务，或光速达基于任何原因终止您使用本服务，您必须立即删除全部因使用本服务而获得的数据（包括各种备份）， 且不得再以任何方式进行使用。

其他规范：

- 请勿为任何用户自动登录到光速达云平台提供代理身份验证凭据。
- 请勿提供跟踪功能，包括但不限于识别其他用户在个人主页上查看、点击等操作行为。
- 请勿自动将浏览器窗口定向到其他网页。
- 请勿设置或发布任何违反相关法规、公序良俗、社会公德等的玩法、内容等。
- 请勿公开表达或暗示，您与光速达之间存在合作关系，包括但不限于相互持股、商业往来或合作关系等，或声称光速达对您的认可。
- 完整的开发者规范和接口限制，请详见开发者接口文档，以及光速达微信公众平台开发者协议。

## 接口权限说明
需要在开放平台 http://open.gtscn.cn 申请后方可使用

## 接口调用频率限制说明
暂无相关限制

## 接口返回码说明

## 公共请求参数说明
| 参数名称 | 数据类型|描述|
|--------|--------|--------|
|timestamp |long | Unix时间戳，单位为秒，如：1448091239。如无特殊说明，需要时间戳相差在180秒以内。同样的，API接口使用的时间内容均为Unix时间戳。|
|sign | string|生成的签名信息，用于验证请求的合法性|
|nonstr | string | 随机字符串，用于提高签名安全性，最长不超过128个字节，区分大小写。
|appId |string | 在光速达智能云开放平台申请的应用的编码|

## HTTP连接请求
用户通过HTTP请求方式，从私有云调用光速达智能云开放接口，实现获取设备列表、查询报警信息、获取视频广场栏目和展示视频列表等功能。

### HTTP请求数据格式规范

```
{
   "appId":"123456",
   "sign":"50b0c63834284359f2b231b4054d1e49",
   "pageIndex":1,
   "deviceId":"GTS0001" ,
   "pageSize":1
}
```
| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|  appId  |string| 0或无值表示正常，否则表示异常|
|  sign |string| 错误信息，用于客户端提示或用户处理|

### HTTP应答数据格式规范
```
{
  "errCode": 503,
  "errMsg": "非法请求，签名内容未通过验证"
}
```

### 服务端返回值定义
| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|  errCode  |number| 0或无值表示正常，否则表示异常|
|  errMsg |string| 错误信息，用于客户端提示或用户处理|

## HTTP连接签名算法

为了防止API调用过程中被黑客恶意篡改，调用任何一个API都需要携带签名，光速达智慧云服务端会根据请求参数，对签名进行验证，签名不合法的请求将会被拒绝。光速达智慧云目前支持的签名算法只支持MD5(sign_method=md5) ，签名大体过程如下：

将待签名参数（包括API的公共参数和业务参数，除去sign参数和byte[]类型的参数）使用英文冒号拼接参数的key和value，根据拼接后的字符串的ASCII码表的顺序排序。如：foo:1, bar:2, foo_bar:3, foobar:4排序后的顺序是bar:2, foo:1, foo_bar:3, foobar:4。
将排序好的字符串用英文逗号拼装在一起，在最后加上secret组成待签名字符串，根据上面的示例得到的结果为：bar:2,foo:1,foo_bar:3,foobar:4,secret:123456。
把待签名字符串使用MD5算法进行摘要，如：md5(bar:2,foo:1,foo_bar:3,foobar:4,secret:123456),将摘要得到的字节流结果输出为十六进制字符串。
说明：MD5是128位长度的摘要算法，用16进制表示，一个十六进制的字符能表示4个位，所以签名后的字符串长度固定为32个十六进制字符。

### 签名范例

以人闸接口调用为例，具体步骤如下：

1. 设置参数值

 公共参数：
```
appId=123456 //第三方用户唯一凭证
timestamp=1463535207898  //当前时间戳
nonstr=aaabbb  //随机字符串
```

 业务参数：
```
deviceId=GTS0001
pageSize=20
pageIndex=1
```

2. 用冒号拼接并按ASCII顺序排序
```
appId:123456
deviceId:GTS0001
nonstr:aaabbb
pageIndex:1
pageSize:20
timestamp:1463535207898
```
3. 拼接参数名与参数值
toSignStr=appId:123456,deviceId:GTS0001,nonstr:aaabbb,pageIndex:1,pageSize:20,timestamp:1463535207898

4. 生成签名
假设app的secret为123456，则签名结果为：hex(md5(toSignStr + ",secret:123456"))=bb4b98e26c9b916f74ada1137b7fc5aa

5. 组装HTTP请求
将所有参数名和参数值采用utf-8进行URL编码（参数顺序可随意，但必须要包括签名参数），然后通过GET或POST（含byte[]类型参数）发起请求，POST请求也可以使用application/json。

__URL示例：__
```
http://gtsc.leanapp.cn/gate/?appId=123456&deviceId=GTS0001&nonstr=aaabbb&pageIndex=1&pageSize=20&timestamp=1463535207898&sign=bb4b98e26c9b916f74ada1137b7fc5aa
```

- 注意事项

所有的请求和响应数据编码皆为utf-8格式，URL里的所有参数名和参数值请做URL编码。如果请求的Content-Type是application/x-www-form-urlencoded，则HTTP Body体里的所有参数值也做URL编码；如果是multipart/form-data格式，每个表单字段的参数值无需编码,但每个表单字段的charset部分需要指定为utf-8。
参数名与参数值拼装起来的URL长度小于1024个字符时，可以用GET发起请求；参数类型含byte[]类型或拼装好的请求URL过长时，必须用POST发起请求。所有API都可以用POST发起请求。
生成签名（sign）仅对未使用TOP官方SDK进行API调用时需要操作，如使用了TOP官方SDK，该步骤SDK会自动完成。


## Group 道闸设备接口

## 道闸通行记录 [/gate/?appId={appId}&deviceId={deviceId}&timestamp={timestamp}&nonstr={nonstr}&pageSize={pageSize}&pageIndex={pageIndex}&sign={sign}&lastSyncDate={lastSyncDate}]

### 获取道闸通行用户数据 [GET]

使用GET请求获取道闸通行用户数据。

+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + lastSyncDate : `2016-04-19T02:06:57.931Z` (string) - 最后同步更新时间，如果不传获取所有的内容，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + deviceId : `GTS0001` (string) - 设备对应的ID号
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + appId : `123456` (string) - 第三方用户唯一凭证
    + pageIndex : `0` (number) - 分页页数,从0开始
    + pageSize : `20` (number) - 每页条数

+ Response 200 (application/json)

        {
            "total": 10,
            "count": 2,
            "data": [{
                "startTime": "2016-07-22T10:37:26.000Z",
                "endTime": "2017-07-01T02:33:45.000Z",
                "mId": "15002e192a",
                "kind": 1,
                "mapType": 0,
                "mobile": "13631293007",
                "deviceId": "01163400000002",
                "createdAt": "2016-09-06T09:44:58.005Z",
                "updatedAt": "2016-09-06T10:51:00.225Z",
                "isDel": 0,
                "gtsNo": "13631293007",
                "communityCode": "57ce93c3a22b9d006c30685b",
                "communityName": "人闸测试用小区"
            }, {
                "startTime": "2016-07-22T10:37:26.000Z",
                "endTime": "2017-07-01T02:33:45.000Z",
                "mId": "379E96E9",
                "kind": 3,
                "mapType": 0,
                "mobile": "13631293007",
                "deviceId": "01163400000002",
                "createdAt": "2016-09-09T10:13:29.579Z",
                "updatedAt": "2016-09-12T02:04:41.945Z",
                "isDel": 0,
                "gtsNo": "13631293007",
                "communityCode": "57ce93c3a22b9d006c30685b",
                "communityName": "人闸测试用小区"
            }]
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }

### 获取道闸通行记录（建议使用） [POST]

使用POST请求获取道闸通行用户数据。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|  startTime  |string| 生效时间|
|  endTime |string| 截止时间|
|  mId |string| 手机串号|
|  mobile |string| 用户手机号|
|  gtsno  |string| 光速号（可能为空） |
|  deviceId  |string| 道闸设备编码 |
|  communityCode | string| 所在小区编码 |
|  communityName | string| 所在小区名称 |
|  createdAt | string| 创建时间 |
|  isDel | number| 是否删除 0-正常  1- 删除 |
|  updatedAt |string| 最近更新时间 |
|  kind  |number|使用类型1.蓝牙手机2.IC卡3.ID卡|
|  mapType  |number|亲属关系0本人1长辈2小孩3其他|

+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + lastSyncDate : `2016-04-19T02:06:57.931Z` (string) - 最后同步更新时间，如果不传获取所有的内容，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + deviceId : `GTS0001` (string) - 设备对应的ID号
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + appId : `123456` (string) - 第三方用户唯一凭证
    + pageIndex : `0` (number) - 分页页数,从0开始
    + pageSize : `20` (number) - 每页条数

+ Request (application/json)

        {
          "sign": "0836bdb2a143b8a872fa89ce034a2390",
          "timestamp": 1463535207898,
          "lastSyncDate": "2016-04-19T02:06:57.931Z",
          "appId": "57ce947edf0eea006868d8a2",
          "nonstr": "aaabbb",
          "pageSize": 20,
          "deviceId": "01163400000002",
          "pageIndex": 0
        }

+ Response 200 (application/json)

        {
            "total": 10,
            "count": 2,
            "data": [{
                "startTime": "2016-07-22T10:37:26.000Z",
                "endTime": "2017-07-01T02:33:45.000Z",
                "mId": "15002e192a",
                "kind": 1,
                "mapType": 0,
                "mobile": "13631293007",
                "deviceId": "01163400000002",
                "createdAt": "2016-09-06T09:44:58.005Z",
                "updatedAt": "2016-09-06T10:51:00.225Z",
                "isDel": 0,
                "gtsNo": "13631293007",
                "communityCode": "57ce93c3a22b9d006c30685b",
                "communityName": "人闸测试用小区"
            }, {
                "startTime": "2016-07-22T10:37:26.000Z",
                "endTime": "2017-07-01T02:33:45.000Z",
                "mId": "379E96E9",
                "kind": 3,
                "mapType": 0,
                "mobile": "13631293007",
                "deviceId": "01163400000002",
                "createdAt": "2016-09-09T10:13:29.579Z",
                "updatedAt": "2016-09-12T02:04:41.945Z",
                "isDel": 0,
                "gtsNo": "13631293007",
                "communityCode": "57ce93c3a22b9d006c30685b",
                "communityName": "人闸测试用小区"
            }]
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }


## 添加道闸开锁记录 [/gate/addLockData]

### 添加道闸开锁记录 [POST]

使用POST请求添加道闸开锁记录。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|openUser|string|开锁人|
|openTime|string|开锁时间|
|type|string|门禁类型|
|openType|string|开锁类型|

+ Parameters
    + openTime : `2016-04-19T02:06:57.931Z` (string) - 开锁时间
    + phone : `18059006599` (string) - 开锁人手机号
    + type : `小区门禁` (string) - 门禁类型
    + openType : `扫描开锁` (string) - 开锁类型("1" 蓝牙开锁,"2" 业主码二维码开锁,"3" 访客二维码开锁,"4" ID卡开锁,"﻿5" IC卡开锁)
    + sign : `d74f88c57796c1d464364e2362e0b462` (string) - 签名算法为MD5（signStr + secret）
    + appId : `123456` (string) - 第三方用户唯一凭证

+ Request (application/json)

        {
            "openTime": "2016-04-19T02:06:57.931Z",
            "phone": 18059006599,
            "type": "小区门禁",
            "openType": "扫描开锁",
            "sign": "d74f88c57796c1d464364e2362e0b462",
            "appId": "123456",
        }

+ Response 200 (application/json)
        {
            "openUser": "576e004e79bc44005befc9a1",
            "type": "小区门禁",
            "openType": "扫描开锁",
            "createdAt": "2016-06-25T03:53:50.839Z",
            "updatedAt": "2016-06-25T03:53:50.839Z"
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }

## 道闸注册ID的对应信息  [/gate/addGateCard]

### 获取道闸通行用户数据 [POST]

使用POST请求注册ID的对应信息。

+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + appId : `123456` (string) - 第三方用户唯一凭证
    + idNum : '123123213' (string)-ID卡号
    + mapNum : 'ahiodh1ih2h13' (string)-生产生成的加密串
+ Response 200 (application/json)

        {
            "appId": "5786fe438ac247006068c644",
            "timestamp": "2016-06-27T08:00:00.000Z",
            "nonstr": "sdad1231",
            "sign": "c99444729d745b3f5846668220abb665",
            "idNum":"11123123",
            "mapNum":"233wqd132131"
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }

## 道闸注册ID获取对应APPID信息  [/gate/getAPPID]

### 获取设备对应APPID及密钥 [POST]

使用POST请求设备对应APPID及密钥。

+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + appId : `123456` (string) - 第三方用户唯一凭证
    + deviceId : '123123213' (string)-设备ID
+ Response 200 (application/json)

        {
            "appId": "57ee1242d203090068692fed",
            "timestamp": "2016-06-27T08:00:00.000Z",
            "nonstr": "sdad1231",
            "sign": "8b76d395d0068c0624f065c1c0f4c366",
            "deviceId":"11123123",
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }



## 获取小区列表  [/gate/getNhList]

### 获取小区列表（小区名称模糊搜索）  [POST]

使用POST请求设备对应APPID及密钥。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|"id"|string|小区ID|
|"name"|string|小区名|
|"deviceId"|string|小区某道闸设备ID|


+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `sdad1231` (string) - 当前加密签名使用的随机字符串
    + sign : `4539c47bee03b354a4d2cf3154f79d31` (string) - 签名算法为MD5（signStr + secret）
    + appId : `57ee1242d203090068692fed` (string) - 第三方用户唯一凭证
    + nhName : `` (string)-小区名(可选)
+ Request (application/json)

        {
            "appId": "57ee1242d203090068692fed",
            "timestamp": 1463535207898,
            "nonstr": "sdad1231",
            "sign": "4539c47bee03b354a4d2cf3154f79d31",
            "nhName":""
        }

+ Response 200 (application/json)

        [{
            "id":"576e2ae62e958a0078dcb5a1",
            "name":"武夷名仕园",
            "deviceId":"0000"
        }]

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }


## 通过单元名获取业主列表  [/gate/getUserFromRoomInfo]

### 通过单元名获取业主列表  [POST]

使用POST请求设备对应APPID及密钥。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|"id"|string|单元室ID|
|"roomInfo"|string|楼幢单元名称|
|"userId"|string|用户ID|
|"userName"|string|用户姓名|
|"userMobile"|string|用户手机号|
|"nhId"|string|小区ID|
|"nhName"|string|小区名|


+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `sdad1231` (string) - 当前加密签名使用的随机字符串
    + sign : `4c1f2bc73eb57ada5525f2861a1cc747` (string) - 签名算法为MD5（signStr + secret）
    + appId : `57ee1242d203090068692fed` (string) - 第三方用户唯一凭证
    + nhId : `57870b9ca34131005b473aa7` (string)-小区ID
    + roomInfo : ``(string)-单元楼幢/房间名(格式[楼幢名,单元名-房间名])(可选)
+ Request (application/json)

        {
            "appId": "57ee1242d203090068692fed",
            "timestamp": 1463535207898,
            "nonstr": "sdad1231",
            "sign": "4c1f2bc73eb57ada5525f2861a1cc747",
            "nhId":"57870b9ca34131005b473aa7",
            "roomInfo":""
        }

+ Response 200 (application/json)
    
        [{
            "id": "57be5a11165abd00663f7460",
            "roomInfo": "7号楼,701",
            "userId": "57425b8ec4c971006063fa03",
            "userName": "郑书亭",
            "userMobile": "18950333991",
            "nhId": "57870b9ca34131005b473aa7",
            "nhName": "光速达智慧社区"
        }]

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }

## 通过业主手机号获取业主的所有入住的楼幢 [/gate/getRoomInfoFromMobile]

### 通过业主手机号获取业主的所有入住的楼幢  [POST]

使用POST请求设备对应APPID及密钥。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|"id"|string|单元室ID|
|"roomInfo"|string|楼幢单元名称|
|"userId"|string|用户ID|
|"userName"|string|用户姓名|
|"userMobile"|string|用户手机号|
|"nhId"|string|小区ID|
|"nhName"|string|小区名|


+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `sdad1231` (string) - 当前加密签名使用的随机字符串
    + sign : `f609113581a37bd5127c926399285e85` (string) - 签名算法为MD5（signStr + secret）
    + appId : `57ee1242d203090068692fed` (string) - 第三方用户唯一凭证
    + mobile : `` (string)-业主手机号(可选)
+ Request (application/json)

        {
            "appId": "57ee1242d203090068692fed",
            "timestamp": 1463535207898,
            "nonstr": "sdad1231",
            "sign": "f609113581a37bd5127c926399285e85",
            "mobile":""
        }
        
+ Response 200 (application/json)

        [{
            "id": "576e345d0a2b580058ff14bb",
            "roomInfo": "1幢,1单元-102室",
            "userId": "572c04822e958a006679b363",
            "userName": "杨敏",
            "userMobile": "15905964830",
            "nhId": "576e2ae62e958a0078dcb5a1",
            "nhName": "武夷名仕园"
        }]

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }


## 绑定IC、ID卡接口 [/gate/bindIDorICCard]

### 绑定IC、ID卡接口  [POST]

使用POST请求设备对应APPID及密钥。

+ Parameters
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `sdad1231` (string) - 当前加密签名使用的随机字符串
    + sign : `17c26e645fa2398174bb20c6e027444b` (string) - 签名算法为MD5（signStr + secret）
    + appId : `57ee1242d203090068692fed` (string) - 第三方用户唯一凭证
    + mid : `11111111111` (string)-手机扫到的二维码解析后的字符串
    + type : `2` (number)-1.ID卡2.IC卡
    + userKind : `null` (number)-用户身份0本人1长辈2小孩3其他(可选)
    + name : `` (string)-卡绑定人的姓名（备注名）(可选)
    + roomId : `57df523d128fe10064d38bf0` (string)-卡绑定单元室ID
    + userId : `570381e2d342d3005cfc90b1`(string)-绑卡人ID（业主）
+ Request (application/json)

        {
            "appId": "57ee1242d203090068692fed",
            "timestamp": 1463535207898,
            "nonstr": "sdad1231",
            "sign": "17c26e645fa2398174bb20c6e027444b",
            "mid":"11111111111",
            "type":2,
            "userKind":null,
            "name":"",
            "userId":"570381e2d342d3005cfc90b1",
            "roomId":"57df523d128fe10064d38bf0"
        }

+ Response 200 (application/json)

        "绑卡成功！"

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }


## Group 光速号API

## Group 商城平台API

## Group 智慧社区API

## 下单 [/1.1/function/createOrderForTrolley]

### 下单接口 [POST]

用户下单接口

+ Request (application/json)

        {
            "orderNo":"335566",
            "seller":"5742a9da79bc44005cab2841",
            "payType":1,
            "reduceCost":10,
            "orderAt":"2016-05-24 14:00:00",
            "payAt":"2016-05-24 14:02:00",
            "receiveAddress":"测试地址",
            "userCouponId":"5743eb17a3413100625d7081",
            "trolleyIds":["5747f54c1532bc0065965d0e", "574421b82e958a006b6fd86d"]
        }

+ Response 200 (application/json)

        {
            "result":
            {
                "orderNo": "335566",
                "buyer": "5742a9da79bc44005cab2841",
                "seller": "5742a9da79bc44005cab2841",
                "payType": 1,
                "total": -9,
                "reduceCost": 10,
                "orderAt": "2016-05-24 14:00:00",
                "payAt": "2016-05-24 14:02:00",
                "transportCost": 0,
                "receiveAddress": "测试地址",
                "userCouponId": "5743eb17a3413100625d7081",
                "remark": "",
                "objectId": "57456c3171cfe4006bb8399f",
                "createdAt": "2016-05-25T09:11:13.925Z",
                "updatedAt": "2016-05-25T09:11:13.925Z"
            }
        }
        
## 支付 [/1.1/functions/payOrder]

### 支付接口 [POST]

用户下单接口

+ Parameters
    + orderId : `5749437cdf0eea005bb14d0b` (string) - 订单ID
    + payType : `1` (string) - 支付方式 1、支付宝 2、微信 3、货到付款
    + price : `10` (number) - 支付金额
    + clientIp : `127.0.0.1` (string) - 终端IP
    + payAt : `2016-05-24 14:02:00` (string) - 支付时间

+ Request (application/json)

        {
            "orderId":"5749437cdf0eea005bb14d0b",
            "price": 0.01,
            "clientIp": "127.0.0.1",
            "payType":2
        }

+ Response 200 (application/json)

        {
             "result": {
                  "id": "ch_Hm5uTSifDOuTy9iLeLPSurrD",
                  "object": "charge",
                  "created": 1410778843,
                  "livemode": true,
                  "paid": false,
                  "refunded": false,
                  "app": "app_1Gqj58ynP0mHeX1q",
                  "channel": "upacp",
                  "order_no": "123456789",
                  "client_ip": "127.0.0.1",
                  "amount": 100,
                  "amount_settle": 100,
                  "currency": "cny",
                  "subject": "Your Subject",
                  "body": "Your Body",
                  "extra":{},
                  "time_paid": null,
                  "time_expire": 1410782443,
                  "time_settle": null,
                  "transaction_no": null,
                  "refunds": {
                    "object": "list",
                    "url": "/v1/charges/ch_Hm5uTSifDOuTy9iLeLPSurrD/refunds",
                    "has_more": false,
                    "data": []
                  },
                  "amount_refunded": 0,
                  "failure_code": null,
                  "failure_msg": null,
                  "credential": {
                    "object": "credential",
                    "upacp": {
                      "tn": "201409151900430000000",
                      "mode": "01"
                    }
                  },
                  "description": null
             }
        }
        
## 用户发布投诉表扬 [/1.1/function/addFeedBack]

### 用户发布投诉表扬 [POST]

方法名:addFeedBack

+ Request (application/json)

        {
            "content": "楼下装修声音太大，很吵！",
            "nhNo": "572994182627f3053620b356",
            "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
            "propertyId": "5742a9da79bc44005cab2841",
            "type": 1
        }

+ Response 200 (application/json)

        {
            "result": {
                "objectId": "57465c7b2e958a002daba825",
                "userId": "56ecbc32da2f60004c887c88",
                "type": 1,
                "content": "楼下装修声音太大，很吵！",
                "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                "updateAt": "2016-05-26T02:16:27.693Z"
            }
        }


## 确认反馈记录 [/property/confirmFeedBack]

### 反馈记录确认 [POST]

物业确认用户提交的反馈记录。

方法名:confirmFeedBack

+ Request (application/json)

        {
            "id":"5729ba9d2627f3053620c31b",
            "lastSyncDate":"2016-05-24T10:03:13.514Z",
            "sign":"",
            "appId":""
        }

+ Response 200 (application/json)

        {
            "result": {
                "objectId": "574519e1c4c971002345eb25",
                "userId": "5742762979bc44005ca9bb3e",
                "userName": "李大塆",
                "type": 1,
                "content": "发现自行车丢了找物业，发现原来是忘记锁了物业把它放到安全的地方去了，这点做的很好",
                "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                "confirmed": 1,
                "reply": ""
            }
        }

+ Response 500 (application/json)

        {
            "code": 305,
            "msg": "时间戳标签不一致！",
            "result": {
                "objectId": "574519e1c4c971002345eb25",
                "userId": "5742762979bc44005ca9bb3e",
                "userName": "李大塆",
                "type": 1,
                "content": "发现自行车丢了找物业，发现原来是忘记锁了物业把它放到安全的地方去了，这点做的很好",
                "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                "confirmed": 1,
                "reply": ""
            }
        }

## 回复反馈记录 [/property/reply]

### 回复用户反馈 [POST]

方法名：reply

对用户的反馈进行回复

+ Request (application/json)

        {
            "id":"5729ba9d2627f3053620c31b",
            "reply":"这是测试回复！",
            "lastSyncDate":"2016-05-24T10:03:13.514Z",
            "sign":"",
            "appId":""
        }

+ Response 200 (application/json)

        {
            "result": {
                "objectId": "574519e1c4c971002345eb25",
                "userId": "5742762979bc44005ca9bb3e",
                "userName": "李大塆",
                "type": 1,
                "content": "发现自行车丢了找物业，发现原来是忘记锁了物业把它放到安全的地方去了，这点做的很好",
                "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                "confirmed": 1,
                "reply": "这是测试回复！"
            }
        }

+ Response 500 (application/json)

        {
            "code": 305,
            "msg": "回复失败，时间戳标签不一致!!",
            "result": {
                "objectId": "574519e1c4c971002345eb25",
                "userId": "5742762979bc44005ca9bb3e",
                "userName": "李大塆",
                "type": 1,
                "content": "发现自行车丢了找物业，发现原来是忘记锁了物业把它放到安全的地方去了，这点做的很好",
                "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                "confirmed": 1,
                "reply": "这是测试回复！"
            }
        }

## 查询反馈记录 [/property/feedList?appId=123456&sign=202a39467d6bba35cfbdc6b76ee907e3&lastSyncDate=2016-05-25T02:01:13.646Z]

### 查询用户用户反馈记录 [GET]

方法名：feedList

查询用户反馈记录

+ Response 200 (application/json)

        {
            "serverTime": "2016-5-25 14:54:52",
            "lists": [
                {
                    "objectId": "574519e1c4c971002345eb26",
                    "userId": "574250c52b51e90057b1dd10",
                    "userName": "光速达测试号",
                    "type": 1,
                    "content": "水管漏水，联系物业，下午就来修了",
                    "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                    "confirmed": 2,
                    "reply": "这是我们应该做的"
                },
                {
                    "objectId": "574519e1c4c971002345eb27",
                    "userId": "574250c52b51e90057b1dd10",
                    "userName": "光速达测试号",
                    "type": 1,
                    "content": "电梯坏了反馈给物业，一小时后就有人来修了",
                    "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                    "confirmed": 2,
                    "reply": "这是我们应该做的"
                },
                {
                    "objectId": "574519e1c4c971002345eb25",
                    "userId": "5742762979bc44005ca9bb3e",
                    "userName": "李大塆",
                    "type": 1,
                    "content": "发现自行车丢了找物业，发现原来是忘记锁了物业把它放到安全的地方去了，这点做的很好",
                    "picture": "http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//NjI0M2QxYjctZmRiMC00NWRmLTg5NTktMTY3MDRhZDE4M2UzcB1ICw.jpg,http://image-tdrz.oss-cn-shenzhen.aliyuncs.com/rt//Y2Q4MDIwNzgtZjQ0Yy00MTgxLWEyMTQtOTdiMzBiOWY2MDk3Elbjfw.jpg",
                    "confirmed": 1,
                    "reply": "这是测试回复！"
                }
            ]
        }
        

## 查询访客记录 [/property/visitorList?appId=123456&sign=202a39467d6bba35cfbdc6b76ee907e3&lastSyncDate=2016-05-25T02:01:13.646Z]

### 查询访客记录 [GET]

方法名：visitorList

查询用户反馈记录

+ Response 200 (application/json)

       {
            "serverTime": "2016-06-03 15:43:15",
            "lists": [
                {
                    "objectId": "5751334fdf0eea006442baf0",
                    "visitedUserId": "574ffa7fd342d3005747c114",
                    "visitedUserName": "13385067628",
                    "visitTime": "2016-06-03T07:35:00.000Z",
                    "expireTime": "2016-06-03T15:59:59.000Z",
                    "name": "李四",
                    "sex": 1,
                    "carNo": "闽A-887766",
                    "byCar": 1,
                    "updateAt": "2016-06-03T07:43:10.183Z"
                }
            ]
        }


## 查询我的小区列表 [/1.1/functions/getMyNhList]

### 查询 [POST]

方法名：getMyNhList

入参：无 需登录

+ Response 200 (application/json)

        {
          "result": {
            "mainNh": "5729943d2627f3053620c1d1",
            "nhList": [
              {
                "objectId": "5729943d2627f3053620c1d0",
                "name": "榕苑新村",
                "address": "映月路位于益家超市旁",
                "people": 0
              },
              {
                "objectId": "5729943d2627f3053620c1d1",
                "name": "赋晖华庭",
                "address": "南涌路63号",
                "people": 0
              }
            ]
          }
        }
        
## 根据地区ID查询小区列表 [/1.1/functions/getNhList]

### 查询 [POST]

方法名：getNhList

+ Request (application/json)

        {
            "areaCode":44040403
        }
+ Response 200 (application/json)

        {
              "result": [
                {
                  "objectId": "5729943d2627f3053620c1d0",
                  "name": "榕苑新村",
                  "address": "映月路位于益家超市旁",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d1",
                  "name": "赋晖华庭",
                  "address": "南涌路63号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d2",
                  "name": "祥晖苑",
                  "address": "映月路128号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d3",
                  "name": "嘉裕大厦",
                  "address": "榕月路24号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d4",
                  "name": "易发大厦",
                  "address": "映月路316号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d5",
                  "name": "嘉富园",
                  "address": "琴石路758号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d6",
                  "name": "嘉和茗园",
                  "address": "映月路399号",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d7",
                  "name": "鸿雅花园",
                  "address": "中心唐人街尾",
                  "people": 0
                },
                {
                  "objectId": "5729943d2627f3053620c1d8",
                  "name": "金梦园",
                  "address": "映月路471号",
                  "people": 0
                }
              ]
        }
        
## 根据小区ID查询详情 [/1.1/functions/getNhDetail]

### 查询详情 [POST]

方法名：getNhDetail

+ Request (application/json)

        {
            "id":"5729943d2627f3053620c1d1"
        }
        
+ Response 200 (application/json)

        {
          "result": {
            "nhId": "5729943d2627f3053620c1d0",
            "name": "榕苑新村",
            "address": "映月路位于益家超市旁",
            "people": 2,
            "gsdNum": "02",
            "users": [
              {
                "objectId": "570381e2d342d3005cfc90b1",
                "name": "刘必渠",
                "avatar": "http://ac-htOwgAcS.clouddn.com/63I2ppBXz5lwusn7G5JZRlfinnyO183fGL9B8ISR.jpg"
              },
              {
                "objectId": "5742c05e2b51e90057b54713",
                "avatar": "http://gtscn.cn/templets/default/images/logo.jpg"
              }
            ]
          }
        }
   
   
## 切换主小区 [/1.1/functions/changeMyNhs]

### 切换 [POST]

方法名：changeMyNhs

+ Request (application/json)

        {
            "newNhId":"5729943d2627f3053620c1d1"
        }
+ Response 200 (application/json)

        {
          "result": {
            "userExtend": {
              "__type": "Pointer",
              "className": "UserExtend",
              "objectId": "574276e5c4c971006064d089"
            },
            "neighborList": {
              "__type": "Relation",
              "className": "Neighborhood"
            },
            "username": "18905029911",
            "birthDay": "1980-11-15",
            "emailVerified": false,
            "nickName": "刘必渠",
            "mobilePhoneNumber": "18905029911",
            "avatar": "http://ac-htOwgAcS.clouddn.com/63I2ppBXz5lwusn7G5JZRlfinnyO183fGL9B8ISR.jpg",
            "gender": 0,
            "realName": "刘必渠",
            "nhId": "5729943d2627f3053620c1d1",
            "authData": null,
            "mobilePhoneVerified": true,
            "objectId": "570381e2d342d3005cfc90b1",
            "createdAt": "2016-04-05T09:14:10.896Z",
            "updatedAt": "2016-05-31T02:35:06.493Z"
          }
        }
        
## 添加我的小区 [/1.1/functions/addMyNeighbor]

### 添加 [POST]

方法名：addMyNeighbor

+ Request (application/json)

        {
            "id":"5729943d2627f3053620c1d1"
        }        
        
+ Response 200 (application/json)

       {
          "result": {
            "objectId": "5729943d2627f3053620c1d0",
            "name": "榕苑新村",
            "address": "映月路位于益家超市旁",
            "people": 2
          }
        }
        
## 退出小区 [/1.1/functions/quitNhs]

### 退出 [POST]

方法名：quitNhs

+ Request (application/json)

        {
            "id":"5729943d2627f3053620c1d1"
        }        

## 添加小区 [/1.1/functions/applyNewNeighbor]

### 添加 [POST]

方法名：applyNewNeighbor

+ Request (application/json)

        {
            "areaCode":35012101,
            "name": "高新小区",
            "address": "高新路108号",
            "description":"占地300亩，环境清幽，服务周到"
        }

HOST: http://smarthotel.leanapp.cn

## Group 智慧酒店API

## PMS开房信息通知 [/pmsapi/ihotel/arrive]

### PMS开房信息通知 [POST]

使用POST请求进行开房。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|id|string|数据Id|
|hotelName|string|酒店名称|
|hotelMobile|string|酒店联系电话|
|hotelPicture|string|酒店封面图|
|hotelId|string|酒店ID|
|startAt|string|入住开始时间|
|endAt|string|入住结束时间|
|mobiles|array|入住人手机号合集|
|users|array|入住人已注册光速号对应用户Id|
|authoType|string|房间权限类型|
|roomId|string|房间ID|
|roomName|string|房间名|
|ccUrl|string|中控请求路径|
|ccId|string|中控Id|
|createdAt|string|数据创建|
|updatedAt|string|数据更新时间|


+ Parameters
    + appId : `5770958a816dfa0055e6f4e5` (string) - 第三方用户唯一凭证
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + arriveTime : `2016-04-19T02:06:57.931Z` (string) - PMS办理入住时间或变更时间，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + mobiles : [] (array[]) - 需要开通客控的手机号
    + leaveTime : `2016-04-20T02:06:57.931Z` (string) - PMS计划退房时间时间，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + roomNum : `203` (string) - 入住房间号
    + productCode:''(string) - 产品编码
+ Request (application/json)
        {
            "appId":"5770958a816dfa0055e6f4e5",
            "timestamp":"2016-06-27T10:04:05.512Z",
            "nonstr":"sdad1231",
            "sign":"1231",
            "arriveTime":"2016-6-27 16:00:00",
            "mobiles":["15705909310","13801596429"],
            "leaveTime":"2016-06-30T08:00:00.000Z",
            "roomNum":"123"，
            "productCode":"1087"
       }
    
+ Response 200 (application/json)

        {
            "id": "5770f97b79bc44005b081d02",
            "hotelName": "杭州L酒店",
            "hotelMobile": "110",
            "hotelPicture": "http://ac-Jkj863gr.clouddn.com/00b50e4e79b614235a86.Jpg",
            "hotelId": "56eebc6b128fe100513c51f1",
            "startAt": "2016-06-27T08:00:00.000Z",
            "endAt": "2016-06-30T08:00:00.000Z",
            "mobiles":[
            "15705909310",
            "13801596429"
            ],
            "users":[],
            "authoType": 1,
            "roomId": "5768e4e780dda4005fa7e39a",
            "roomName": "123",
            "ccUrl": "12312322222",
            "ccId": "111",
            "createdAt": "2016-06-27T10:01:31.481Z",
            "updatedAt": "2016-06-27T10:04:05.512Z"
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }
        
## PMS退房信息通知  [/pmsapi/ihotel/leave]

### PMS退房信息通知 [POST]

使用POST请求进行退房。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|id|string|数据Id|
|hotelName|string|酒店名称|
|hotelMobile|string|酒店联系电话|
|hotelPicture|string|酒店封面图|
|hotelId|string|酒店ID|
|startAt|string|入住开始时间|
|endAt|string|入住结束时间|
|mobiles|array|入住人手机号合集|
|users|array|入住人已注册光速号对应用户Id|
|authoType|string|房间权限类型|
|roomId|string|房间ID|
|roomName|string|房间名|
|ccUrl|string|中控请求路径|
|ccId|string|中控Id|
|createdAt|string|数据创建|
|updatedAt|string|数据更新时间|

+ Request (application/json)
        {
            "appId":"5770958a816dfa0055e6f4e5",
            "timestamp":"2016-06-27T08:00:00.000Z",
            "nonstr":"sdad1231",
            "sign":"1231",
            "isDeBug":true,
            "leaveTime":"2016-06-30T08:00:00.000Z",
            "roomNum":"123"
        }

+ Parameters
    + appId : `5770958a816dfa0055e6f4e5` (string) - 第三方用户唯一凭证
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + leaveTime : `2016-04-20T02:06:57.931Z` (string) - PMS计划退房时间时间，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + roomNum : `203` (string) - 入住房间号

+ Response 200 (application/json)

       {
            "id": "5770f97b79bc44005b081d02",
            "hotelName": "杭州L酒店",
            "hotelMobile": "110",
            "hotelPicture": "http://ac-Jkj863gr.clouddn.com/00b50e4e79b614235a86.Jpg",
            "hotelId": "56eebc6b128fe100513c51f1",
            "startAt": "2016-06-27T08:00:00.000Z",
            "endAt": "2016-06-30T08:00:00.000Z",
            "mobiles":[
            "15705909310",
            "13801596429"
            ],
            "users":[],
            "authoType": 1,
            "roomId": "5768e4e780dda4005fa7e39a",
            "roomName": "123",
            "ccUrl": "12312322222",
            "ccId": "111",
            "createdAt": "2016-06-27T10:01:31.481Z",
            "updatedAt": "2016-06-27T10:09:35.403Z"
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }
        
## 获取酒店入住信息（IP、端口）  [/pmsapi/getMyRoomDetail]

### 获取酒店入住信息（IP、端口） [POST]

使用POST请求获取入住酒店房间IP及端口号。

返回值解释：

| 参数名称 | 数据类型|描述|
|--------|--------|------|---|
|ip|string|ip地址|
|port|number|端口号|

+ Request (application/json)
        {
            "appId":"57e9d82d2e958a00544f55eb",
            "timestamp":"2016-6-27 16:00:00",
            "nonstr":"sdad1231",
            "sign":"e5f0ee2734656c7deb6741507ee37bba",
            "roomNum":"905"
        }

+ Parameters
    + appId : `5770958a816dfa0055e6f4e5` (string) - 第三方用户唯一凭证
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + roomNum : `203` (string) - 入住房间号

+ Response 200 (application/json)

       {
            "ip": "191.168.131.31",
            "port": 9991
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }



## Group 交易中心API

## Group 车闸对接接口

## 车辆通行时通知 [/brake/notice]

### 车辆通行时通知 [POST]

使用POST请求发送通知。

+ Request (application/json)
        {
            "appId":"5770958a816dfa0055e6f4e5",
            "timestamp":"2016-06-27T08:00:00.000Z",
            "nonstr":"sdad1231",
            "sign":"1231",
            "carNo":"闽A256CF",
            "serialNumber":"",
            "triggerTime":"2016-06-30T08:00:00.000Z",
            "direction":"in",
            "parkingLength":120,
            "parkingFee":100,
            "picture":""
        }

+ Parameters
    + appId : `5770958a816dfa0055e6f4e5` (string) - 第三方用户唯一凭证
    + timestamp : `1463535207898` (number) - 请求提交的当前时间时间戳
    + nonstr : `aaabbb` (string) - 当前加密签名使用的随机字符串
    + sign : `0a20d32eda37038e2287ccf74b49e0f4` (string) - 签名算法为MD5（signStr + secret）
    + triggerTime : `2016-04-20T02:06:57.931Z` (string) - 通行触发时间，日期格式必须是 `2016-04-19T02:06:57.931Z` 的 UTC 时间
    + carNo : `闽A256CF` (string) - 车牌号
    + serialNumber : 把预定停车时传过去的serialNumber原样传回来
    + direction : `in` (string) - 通行方向，in进入，out离开
    + parkingLength : `120` (string) - 停车时长分钟数（可选，如果为离开提供该数据）
    + parkingFee : `100` (string) - 收费情况（可选）
    + picture : `` (string) - 照片（可选，摄像头截取的内容）

+ Response 200 (application/json)

        {
            "errCode": 0, 
            "errMsg": "OK" 
        }

+ Response 503 (application/json)

        {
            "errCode": 503,
            "errMsg": "非法请求，签名内容未通过验证"
        }
